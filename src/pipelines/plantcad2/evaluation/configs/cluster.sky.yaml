# See: https://docs.skypilot.co/en/v0.9.3/reference/yaml-spec.html
resources:
  # For available Lambda regions, see: https://docs.lambda.ai/api/cloud#listInstanceTypes
  infra: lambda
  # For details on accelerator specification, see:
  # - https://docs.skypilot.co/en/v0.9.3/compute/gpus.html (e.g. A100-80GB, A100, A10)
  # - https://docs.skypilot.co/en/latest/examples/auto-failover.html#multiple-candidate-gpus
  accelerators: {A10:1, A100:1}
  disk_size: 100

envs:
  # SkyPilot will enforce the existence of any env vars with `null` values here
  HUGGING_FACE_HUB_TOKEN: null

workdir: .

setup: |
  set -e
  uv sync --extra gpu --extra mamba

  # Log SkyPilot environment variables
  echo "SKYPILOT_NUM_NODES: $SKYPILOT_NUM_NODES"
  echo "SKYPILOT_CLUSTER_INFO: $SKYPILOT_CLUSTER_INFO"
  echo "SKYPILOT_SETUP_NODE_IPS: $SKYPILOT_SETUP_NODE_IPS"
  echo "SKYPILOT_SETUP_NODE_RANK: $SKYPILOT_SETUP_NODE_RANK"

  # Infer Ray cluster settings from SkyPilot cluster info
  # Note that `SKYPILOT_SETUP_NODE_IPS` is ordered by node rank; see:
  # https://docs.skypilot.co/en/latest/running-jobs/environment-variables.html#environment-variables-for-setup
  RAY_SETUP_HEAD_NODE_IP=$(echo "$SKYPILOT_SETUP_NODE_IPS" | head -n1)
  RAY_SETUP_CLUSTER_NAME=$(echo "$SKYPILOT_CLUSTER_INFO" | sed -n 's/.*"cluster_name": "\([^"]*\)".*/\1/p')

  # Initialize Ray cluster in sanitized environment
  env -i \
    HOME="$HOME" \
    RAY_SETUP_HEAD_NODE_IP="$RAY_SETUP_HEAD_NODE_IP" \
    RAY_SETUP_NODE_RANK="$SKYPILOT_SETUP_NODE_RANK" \
    RAY_SETUP_CLUSTER_NAME="$RAY_SETUP_CLUSTER_NAME" \
    HUGGING_FACE_HUB_TOKEN="$HUGGING_FACE_HUB_TOKEN" \
    bash --login scripts/ray_init.sh
