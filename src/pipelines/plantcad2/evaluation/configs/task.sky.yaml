name: plantcad2-evaluation

# This is very important -- if you don't specifcy 2 nodes here,
# then skypilot may launch the task on any node in the cluster and will
# populate env vars like this in a 2 node cluster:
# (worker1, rank=0, pid=6675, ip=10.19.89.229) SKYPILOT_NUM_NODES: 1
# (worker1, rank=0, pid=6675, ip=10.19.89.229) SKYPILOT_NUM_GPUS_PER_NODE: 0
# (worker1, rank=0, pid=6675, ip=10.19.89.229) SKYPILOT_NODE_IPS: 10.19.89.229
# (worker1, rank=0, pid=6675, ip=10.19.89.229) SKYPILOT_NODE_RANK: 0
# This is a problem because the node ip list only includes on worker node instead of all IPs
# and this script infers the Ray head node from the full ip list (and the worker is assigned rank 0)
# TODO: pass in RAY_ADDRESS from env
num_nodes: 2
envs:
  HUGGING_FACE_HUB_TOKEN: null
  ARGS: ""

workdir: .

run: |
  set -e

  # Log SkyPilot environment variables
  echo "SKYPILOT_NUM_NODES: $SKYPILOT_NUM_NODES"
  echo "SKYPILOT_NUM_GPUS_PER_NODE: $SKYPILOT_NUM_GPUS_PER_NODE"
  echo "SKYPILOT_NODE_IPS: $SKYPILOT_NODE_IPS"
  echo "SKYPILOT_NODE_RANK: $SKYPILOT_NODE_RANK"

  # Run on rank 0 only as defense against accidental multi-node task execution
  if [ "$SKYPILOT_NODE_RANK" == "0" ]; then
    # Set Ray address for sanitized environment
    RAY_HEAD_NODE_IP=$(echo "$SKYPILOT_NODE_IPS" | head -n1)
    RAY_ADDRESS="$RAY_HEAD_NODE_IP:6479"

    # Execute the pipeline in sanitized environment
    env -i \
      HOME="$HOME" \
      RAY_DEDUP_LOGS=0 \
      RAY_ADDRESS="$RAY_ADDRESS" \
      HUGGING_FACE_HUB_TOKEN="$HUGGING_FACE_HUB_TOKEN" \
      bash -c "source .venv/bin/activate && python -m src.pipelines.plantcad2.evaluation.pipeline \
        --config_path src/pipelines/plantcad2/evaluation/configs/config.yaml \
        --tasks.evolutionary_constraint.generate_logits.simulation_mode false \
        --executor.prefix hf://datasets/plantcad/_dev_pc2_eval \
        --executor.force_run_failed true \
        ${ARGS}"
  fi
