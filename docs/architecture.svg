<svg width="1200" height="800" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <linearGradient id="configGrad" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#3b82f6;stop-opacity:0.15"/>
      <stop offset="100%" style="stop-color:#3b82f6;stop-opacity:0.05"/>
    </linearGradient>
    <linearGradient id="flowGrad" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#059669;stop-opacity:0.15"/>
      <stop offset="100%" style="stop-color:#059669;stop-opacity:0.05"/>
    </linearGradient>
    <linearGradient id="execGrad" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#f59e0b;stop-opacity:0.15"/>
      <stop offset="100%" style="stop-color:#f59e0b;stop-opacity:0.05"/>
    </linearGradient>
  </defs>

  <!-- Title -->
  <text x="600" y="25" font-family="Arial, sans-serif" font-size="20" font-weight="bold" fill="#1e293b" text-anchor="middle">Pipeline Architecture</text>

  <!-- Configuration Section -->
  <rect x="20" y="50" width="560" height="260" rx="12" fill="url(#configGrad)" stroke="#3b82f6" stroke-width="2"/>
  <text x="35" y="75" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="#1e40af">Configuration Pipeline</text>

  <!-- YAML Config -->
  <rect x="40" y="90" width="180" height="110" rx="6" fill="#f8fafc" stroke="#e2e8f0" stroke-width="1"/>
  <text x="50" y="110" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#1e293b">config.yaml</text>
  <text x="50" y="130" font-family="monospace" font-size="9" fill="#475569">tasks:</text>
  <text x="50" y="145" font-family="monospace" font-size="9" fill="#475569">  evolutionary_constraint:</text>
  <text x="50" y="160" font-family="monospace" font-size="9" fill="#475569">    execution_mode: local</text>
  <text x="50" y="175" font-family="monospace" font-size="9" fill="#475569">    slurm_config:</text>
  <text x="50" y="190" font-family="monospace" font-size="9" fill="#475569">      partition: gh</text>

  <!-- OmegaConf -->
  <rect x="240" y="90" width="120" height="60" rx="6" fill="#dbeafe" stroke="#3b82f6" stroke-width="1"/>
  <text x="250" y="110" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#1e40af">OmegaConf</text>
  <text x="250" y="130" font-family="Arial, sans-serif" font-size="10" fill="#1e40af">Interpolation</text>
  <text x="250" y="145" font-family="Arial, sans-serif" font-size="10" fill="#1e40af">Merging</text>

  <!-- Pydantic Models -->
  <rect x="380" y="90" width="180" height="110" rx="6" fill="#f0f9ff" stroke="#0ea5e9" stroke-width="1"/>
  <text x="390" y="110" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#0c4a6e">Pydantic Models</text>
  <text x="390" y="130" font-family="monospace" font-size="9" fill="#075985">FlowConfig</text>
  <text x="390" y="145" font-family="monospace" font-size="9" fill="#075985">TasksConfig</text>
  <text x="390" y="160" font-family="monospace" font-size="9" fill="#075985">EvolutionaryConstraintConfig</text>
  <text x="390" y="175" font-family="monospace" font-size="9" fill="#075985">SlurmConfig</text>
  <text x="390" y="190" font-family="Arial, sans-serif" font-size="9" fill="#075985">Type validation</text>

  <!-- CLI Overrides -->
  <rect x="40" y="220" width="520" height="70" rx="6" fill="#fef2f2" stroke="#dc2626" stroke-width="1"/>
  <text x="50" y="240" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#991b1b">CLI Override Merge</text>
  <text x="50" y="260" font-family="monospace" font-size="9" fill="#7f1d1d">--overrides "tasks.evolutionary_constraint.sample_size=500,tasks.*.execution_mode=slurm"</text>
  <text x="50" y="280" font-family="Arial, sans-serif" font-size="10" fill="#991b1b">Runtime parameter override with dotlist syntax</text>

  <!-- Flow Architecture Section -->
  <rect x="620" y="50" width="560" height="260" rx="12" fill="url(#flowGrad)" stroke="#059669" stroke-width="2"/>
  <text x="635" y="75" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="#065f46">Flow Composition</text>

  <!-- BaseFlow -->
  <rect x="640" y="90" width="520" height="40" rx="6" fill="#f0fdf4" stroke="#16a34a" stroke-width="1"/>
  <text x="650" y="110" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#15803d">BaseFlow (MetaFlow FlowSpec)</text>
  <text x="650" y="125" font-family="Arial, sans-serif" font-size="10" fill="#166534">Config resolution, parameter handling, OmegaConf integration</text>

  <!-- Task Flows -->
  <rect x="640" y="150" width="240" height="90" rx="6" fill="#fef3c7" stroke="#f59e0b" stroke-width="1"/>
  <text x="650" y="170" font-family="Arial, sans-serif" font-size="11" font-weight="bold" fill="#92400e">EvolutionaryConstraintFlow</text>
  <text x="650" y="185" font-family="monospace" font-size="8" fill="#78350f">start → downsample_dataset</text>
  <text x="650" y="200" font-family="monospace" font-size="8" fill="#78350f">→ generate_logits</text>
  <text x="650" y="215" font-family="monospace" font-size="8" fill="#78350f">→ compute_scores → compute_roc</text>
  <text x="650" y="230" font-family="Arial, sans-serif" font-size="9" fill="#92400e">Inherits: BaseFlow</text>

  <rect x="920" y="150" width="240" height="90" rx="6" fill="#fce7f3" stroke="#ec4899" stroke-width="1"/>
  <text x="930" y="170" font-family="Arial, sans-serif" font-size="11" font-weight="bold" fill="#be185d">SpliceAcceptorFlow</text>
  <text x="930" y="185" font-family="monospace" font-size="8" fill="#9d174d">start → downsample_dataset</text>
  <text x="930" y="200" font-family="monospace" font-size="8" fill="#9d174d">→ generate_logits</text>
  <text x="930" y="215" font-family="monospace" font-size="8" fill="#9d174d">→ compute_scores → compute_roc</text>
  <text x="930" y="230" font-family="Arial, sans-serif" font-size="9" fill="#be185d">Inherits: BaseFlow</text>

  <!-- Parent Flow -->
  <rect x="640" y="260" width="520" height="40" rx="6" fill="#e0f2fe" stroke="#0284c7" stroke-width="1"/>
  <text x="650" y="280" font-family="Arial, sans-serif" font-size="11" font-weight="bold" fill="#0369a1">EvaluationFlow: run_evolutionary_constraint || run_splice_acceptor → combine_results</text>
  <text x="650" y="295" font-family="Arial, sans-serif" font-size="9" fill="#0369a1">Uses Metaflow Runner pattern for subprocess isolation</text>

  <!-- Execution Section -->
  <rect x="20" y="340" width="1160" height="280" rx="12" fill="url(#execGrad)" stroke="#f59e0b" stroke-width="2"/>
  <text x="35" y="365" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="#92400e">Execution Modes (Per-Step Configuration)</text>

  <!-- Local Execution -->
  <rect x="40" y="380" width="350" height="220" rx="6" fill="#f0fdf4" stroke="#16a34a" stroke-width="1"/>
  <text x="50" y="400" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#15803d">Local Execution</text>
  <text x="50" y="420" font-family="monospace" font-size="10" fill="#166534">execution_mode: "local"</text>

  <rect x="60" y="430" width="310" height="60" rx="4" fill="#dcfce7" stroke="#22c55e" stroke-width="1"/>
  <text x="70" y="450" font-family="Arial, sans-serif" font-size="11" font-weight="bold" fill="#15803d">Direct Function Calls</text>
  <text x="70" y="465" font-family="Arial, sans-serif" font-size="9" fill="#166534">• pandas/torch operations</text>
  <text x="70" y="480" font-family="Arial, sans-serif" font-size="9" fill="#166534">• Single process, fast iteration</text>

  <rect x="60" y="500" width="310" height="80" rx="4" fill="#fef2f2" stroke="#ef4444" stroke-width="1"/>
  <text x="70" y="520" font-family="Arial, sans-serif" font-size="11" font-weight="bold" fill="#dc2626">Debug Support</text>
  <text x="70" y="535" font-family="monospace" font-size="9" fill="#991b1b">from src.debug import remote_pdb</text>
  <text x="70" y="550" font-family="monospace" font-size="9" fill="#991b1b">remote_pdb(4444).set_trace()</text>
  <text x="70" y="565" font-family="monospace" font-size="8" fill="#991b1b">$ nc 127.0.0.1 4444</text>
  <text x="70" y="575" font-family="Arial, sans-serif" font-size="8" fill="#991b1b">Works in subprocesses</text>

  <!-- SLURM Execution -->
  <rect x="410" y="380" width="350" height="220" rx="6" fill="#fef3c7" stroke="#f59e0b" stroke-width="1"/>
  <text x="420" y="400" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#92400e">SLURM Execution</text>
  <text x="420" y="420" font-family="monospace" font-size="10" fill="#78350f">execution_mode: "slurm"</text>

  <rect x="430" y="430" width="310" height="90" rx="4" fill="#fed7aa" stroke="#f97316" stroke-width="1"/>
  <text x="440" y="450" font-family="Arial, sans-serif" font-size="11" font-weight="bold" fill="#9a3412">SlurmConfig Applied</text>
  <text x="440" y="465" font-family="monospace" font-size="9" fill="#7c2d12">partition: "gh"</text>
  <text x="440" y="480" font-family="monospace" font-size="9" fill="#7c2d12">nodes: 2</text>
  <text x="440" y="495" font-family="monospace" font-size="9" fill="#7c2d12">tasks_per_node: 1</text>
  <text x="440" y="510" font-family="monospace" font-size="9" fill="#7c2d12">timeout_min: 60</text>

  <rect x="430" y="530" width="310" height="60" rx="4" fill="#fde68a" stroke="#f59e0b" stroke-width="1"/>
  <text x="440" y="550" font-family="Arial, sans-serif" font-size="11" font-weight="bold" fill="#78350f">Distributed Execution</text>
  <text x="440" y="565" font-family="monospace" font-size="8" fill="#78350f">run_slurm_function(task_func, **slurm_config)</text>
  <text x="440" y="580" font-family="Arial, sans-serif" font-size="9" fill="#78350f">Data sharding, GPU parallelism, result aggregation</text>

  <!-- Configuration Switching -->
  <rect x="780" y="380" width="380" height="220" rx="6" fill="#f3e8ff" stroke="#8b5cf6" stroke-width="1"/>
  <text x="790" y="400" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#6b21a8">Configuration Switching</text>

  <rect x="800" y="420" width="340" height="60" rx="4" fill="#e9d5ff" stroke="#a855f7" stroke-width="1"/>
  <text x="810" y="440" font-family="Arial, sans-serif" font-size="11" font-weight="bold" fill="#7c3aed">Per-Task Mode</text>
  <text x="810" y="455" font-family="monospace" font-size="8" fill="#6b21a8">tasks.evolutionary_constraint.execution_mode=slurm</text>
  <text x="810" y="470" font-family="Arial, sans-serif" font-size="9" fill="#6b21a8">Mixed execution modes</text>

  <rect x="800" y="490" width="340" height="50" rx="4" fill="#e9d5ff" stroke="#a855f7" stroke-width="1"/>
  <text x="810" y="510" font-family="Arial, sans-serif" font-size="11" font-weight="bold" fill="#7c3aed">Global Override</text>
  <text x="810" y="525" font-family="monospace" font-size="8" fill="#6b21a8">tasks.*.execution_mode=slurm</text>
  <text x="810" y="535" font-family="Arial, sans-serif" font-size="9" fill="#6b21a8">All tasks use SLURM</text>

  <rect x="800" y="550" width="340" height="40" rx="4" fill="#ddd6fe" stroke="#8b5cf6" stroke-width="1"/>
  <text x="810" y="570" font-family="Arial, sans-serif" font-size="11" font-weight="bold" fill="#6b21a8">Runtime Decision</text>
  <text x="810" y="585" font-family="Arial, sans-serif" font-size="9" fill="#6b21a8">if execution_mode == "slurm": submitit else: direct_call</text>

  <!-- Key Benefits -->
  <rect x="20" y="640" width="1160" height="60" rx="6" fill="#f8fafc" stroke="#64748b" stroke-width="1"/>
  <text x="30" y="660" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#1e293b">Architecture Benefits</text>
  <text x="30" y="675" font-family="Arial, sans-serif" font-size="11" fill="#475569">Type-safe configuration • Modular composition • Seamless scaling • Remote debugging</text>
  <text x="30" y="690" font-family="Arial, sans-serif" font-size="11" fill="#475569">Local development → SLURM production with config changes only</text>

  <!-- Arrows -->
  <path d="M 220 125 L 240 125" stroke="#3b82f6" stroke-width="2" marker-end="url(#arrow)" fill="none"/>
  <path d="M 360 125 L 380 125" stroke="#0ea5e9" stroke-width="2" marker-end="url(#arrow)" fill="none"/>
  <path d="M 900 130 L 900 150" stroke="#059669" stroke-width="2" marker-end="url(#arrow)" fill="none"/>
  <path d="M 300 310 L 300 340" stroke="#f59e0b" stroke-width="2" marker-end="url(#arrow)" fill="none"/>

  <!-- Arrow marker -->
  <defs>
    <marker id="arrow" markerWidth="8" markerHeight="6" refX="7" refY="3" orient="auto">
      <polygon points="0 0, 8 3, 0 6" fill="#374151"/>
    </marker>
  </defs>
</svg>
