[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "plantcad-dev"
version = "0.1.0"
description = "Development repository for PlantCaduceus (PlantCAD) evaluation and experimentation pipelines"
readme = "README.md"
requires-python = ">=3.12,<3.13"
dependencies = [
  "transformers==4.55.0",
  "pandas==2.3.1",
  "numpy==2.3.2",
  "scikit-learn==1.7.1",
  "draccus==0.11.5",
  "datasets==4.0.0",
  "tqdm==4.67.1",
  "pydantic==2.11.7",
  "skypilot[lambda]>=0.10",
  "thalas==0.1.0",
  "ray[default,client]==2.45",
  "universal-pathlib==0.2.6",
  "xarray==2025.8.0",
  "netcdf4==1.7.2",
  "dask[array]>=2025.7.0",
]

[project.optional-dependencies]
# See here for cpu/gpu groups: https://github.com/astral-sh/uv/issues/10590
cpu = [
  "torch==2.7.1",
]
gpu = [
  "torch==2.7.1",
]
mamba = [
  "causal-conv1d==1.5.0.post8",
  "mamba-ssm==2.2.4",
]

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.uv.sources]
torch = [
  { index = "pytorch-cpu", extra = "cpu" },
  { index = "pytorch-cu128", extra = "gpu" },
]
mamba-ssm = [
  # Attempt install of pre-built wheels
  { url = "https://github.com/Open-Athena/python-wheels/releases/download/v0.0.1/mamba_ssm-2.2.4-cp312-cp312-linux_x86_64.whl", marker = "sys_platform == 'linux' and platform_machine == 'x86_64' and python_version == '3.12'" },
  # Fall back on forced installation from source
  { git = "https://github.com/state-spaces/mamba", tag = "v2.2.4", marker = "sys_platform != 'linux' or platform_machine != 'x86_64' or python_version != '3.12'" },
]
causal-conv1d = [
  # Attempt install of pre-built wheels
  { url = "https://github.com/Open-Athena/python-wheels/releases/download/v0.0.1/causal_conv1d-1.5.0.post8-cp312-cp312-linux_x86_64.whl", marker = "sys_platform == 'linux' and platform_machine == 'x86_64' and python_version == '3.12'" },
  # Fall back on forced installation from source
  { git = "https://github.com/Dao-AILab/causal-conv1d", tag = "v1.5.0.post8", marker = "sys_platform != 'linux' or platform_machine != 'x86_64' or python_version != '3.12'" },
]
skypilot = { git = "https://github.com/Open-Athena/skypilot", branch = "fix-lambda-launch" }
thalas = { git = "https://github.com/Open-Athena/thalas", branch = "executor-extraction" }

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true                              # Use this index only for pytorch

[[tool.uv.index]]
name = "pytorch-cu128"
url = "https://download.pytorch.org/whl/cu128"
explicit = true                                # Use this index only for pytorch

[tool.uv]
no-build-isolation-package = ["mamba-ssm", "causal-conv1d"]
conflicts = [
  [
    { extra = "cpu" },
    { extra = "gpu" },
  ],
]

[[tool.uv.dependency-metadata]]
name = "mamba-ssm"
version = "2.2.4"
requires-dist = ["torch", "einops"]

[[tool.uv.dependency-metadata]]
name = "causal-conv1d"
version = "1.5.0.post8"
requires-dist = ["torch", "einops"]

[tool.pyrefly]
project-includes = ["src"]
project-excludes = []
python-platform = "linux"
ignore-missing-source = true
replace-imports-with-any = [
  "torch.*",
  "ray.*",
  "submitit.*",
  "pandas.*",
]


[dependency-groups]
dev = [
  "pytest>=8.3.4",
  "pytest-cov>=6.0.0",
  "ruff>=0.11.13",
  "pytype>=2024.10.11",
  "pre-commit>=4.2.0",
  "fabric>=3.2.2",
  "pyrefly>=0.32.0",
]
slurm = [
  "submitit>=1.5.1",
]

[tool.pytest.ini_options]
filterwarnings = [
  "ignore:UPath 'hf' filesystem not explicitly implemented:UserWarning:upath.core",
]
addopts = "--cov=src --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["src"]
omit = [
  "*/tests/*",
  "*/__pycache__/*",
  "*/.venv/*",
]
